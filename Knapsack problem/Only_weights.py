"""
https://stepik.org/lesson/307329/step/4?unit=289417

У вас есть n слитков золота, каждый имеет свой вес. Также у вас есть рюкзак вместимости S.
Необходимо вычислить максимальный вес, который вы можете с собой унести. Вы не можете дробить слитки.

В первой строке записано два целых числа S и n
Во второй строке записаны n целых чисел - веса слитков.

В первой строке выведите два числа - максимальный суммарный вес, который вы можете унести,
а также необходимое для этого количество камней.

Во второй строке выведите номера камней, которые вы хотите взять с собой. Камни нумеруются с 1
в том порядке, в котором они даны во входных данных. Если есть несколько способов унести найденный вес, выведите любой.


>>> get_weight(10, 6, [2,3,4,4,6,9])
10 3
4 3 1

>>> get_weight(10, 6, [1,1,1,1,1,1])
6 6
6 5 4 3 2 1

>>> get_weight(1, 1, [1])
1 1
1

>>> get_weight(1, 1, [2])
0 0

>>> get_weight(4, 6, [7,8,5,8,7,6])
0 0

>>> get_weight(4, 6, [7,8,4,8,7,6])
4 1
3
"""


from typing import List


def get_weight(s: int, n: int, stones: List[int]) -> None:
    dp = [[0 for i in range(s + 1)] for j in range(n + 1)]

    for i in range(1, n + 1):
        for j in range(1, s + 1):
            dp[i][j] = dp[i - 1][j]
            if j - stones[i - 1] >= 0:
                dp[i][j] = max(dp[i][j], dp[i - 1][j - stones[i - 1]] + stones[i - 1])

    answer = []
    i, j = n, s
    while i > 0:
        if dp[i - 1][j] != dp[i][j]:
            answer.append(i)
            j -= stones[i - 1]
        i -= 1

    print(dp[-1][-1], len(answer))
    if answer:
        print(*answer)


"""
Тут мы используем дп, смотрим какой максимальный вес мы можем набрать, когда используем только i камней и имеем вес j
"""